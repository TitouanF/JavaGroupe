/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package modele;

import com.itextpdf.text.BaseColor;
import java.io.FileOutputStream;
import java.io.IOException;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.util.Date;
import javafx.collections.ObservableList;

public class CreationPDF 
{
    public static final String chemin = "C:\\Users\\Titouan FLOCH\\Documents\\pdfTest.pdf";
     private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    
    public static void main(String[] args) {}
 
    public static boolean creation(ObservableList<Client> listeClients,String libelle,String description,String date)
    {
        try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(chemin));
            document.open();
            addTitlePage(document,libelle,description,date);
            addTableau(document,listeClients);
            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
           return true;
    }
    private static void addTitlePage(Document document,String libelle,String description,String date)throws DocumentException
        {
          Paragraph preface = new Paragraph();
          // We add one empty line
          addEmptyLine(preface, 1);
          // Lets write a big header
          preface.add(new Paragraph("Sujet de la session du " +date+ " : " + libelle, catFont));
          addEmptyLine(preface, 1);
          // Will create: Report generated by: _name, _date
          preface.add(new Paragraph("Description de la formation : " + description,smallBold));
          document.add(preface);
       }
    private static void addEmptyLine(Paragraph paragraph, int number) 
    {
        for (int i = 0; i < number; i++) 
        {
            paragraph.add(new Paragraph(" "));
        }
    }
    private static void addTableau(Document document,ObservableList<Client> listeClients)throws DocumentException
    {
        Paragraph preface = new Paragraph();
        addEmptyLine(preface, 1);
        PdfPTable table = new PdfPTable(2);
        PdfPCell c1 = new PdfPCell(new Phrase("nom du salarié"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        PdfPCell c2 = new PdfPCell(new Phrase("signature du salarié"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c2);
      if (listeClients.isEmpty() == true)
      {
       PdfPCell cell = new PdfPCell(new Phrase("il n'y a pas de salariés inscrits dans cette session"));
        cell.setColspan(2);
        table.addCell(cell);
        preface.add(table);
        document.add(preface);
      }
    }

        
     


}
